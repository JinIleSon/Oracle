/*
    날짜 : 2025/07/15
    이름 : 손진일
    내용 : 3장 SQL 고급
*/

-- 실습하기 3-1. 테이블 생성 및 데이터 입력
create table emp (
    EMPNO   number(4) primary key,
    NAME    varchar2(20) not null,
    gender  char(1) not null,
    job     varchar(20) not null,
    depno   number(2),
    regdate date not null
);

create table dept (
    deptno  number(2) primary key,
    dname   varchar2(20) not null,
    dtel    varchar2(12) not null
);

create table sale (
    no        number generated by default as identity primary key,
    empno     number(4) not null,
    year      number(4) not null,
    month     number(2) not null,
    price      number(10)
);

// 직원 테이블 데이터 입력

INSERT INTO EMP VALUES (1001, '김유신', 'M', '사원', 10, SYSDATE);
INSERT INTO EMP VALUES (1002, '김춘추', 'M', '대리', 20, SYSDATE);
INSERT INTO EMP VALUES (1003, '장보고', 'M', '과장', 10, SYSDATE);
INSERT INTO EMP VALUES (1004, '강감찬', 'M', '부장', 30, SYSDATE);
INSERT INTO EMP VALUES (1005, '신사임당', 'F', '대리', 20, SYSDATE);
INSERT INTO EMP VALUES (1006, '이황', 'M', '사원', 40, SYSDATE);
INSERT INTO EMP VALUES (1007, '이이', 'M', '과장', 20, SYSDATE);
INSERT INTO EMP VALUES (1008, '이순신', 'M', '사원', NULL, SYSDATE);
INSERT INTO EMP VALUES (1009, '허난설헌', 'F', '사원', NULL, SYSDATE);
INSERT INTO EMP VALUES (1010, '정약용', 'M', '대리', 50, SYSDATE);

// 부서 테이블 데이터 입력
INSERT INTO DEPT (DEPTNO, DNAME, DTEL) VALUES (10, '영업1부', '051-511-1000');
INSERT INTO DEPT (DEPTNO, DNAME, DTEL) VALUES (20, '영업2부', '051-511-2000');
INSERT INTO DEPT (DEPTNO, DNAME, DTEL) VALUES (30, '영업3부', '051-511-3000');
INSERT INTO DEPT (DEPTNO, DNAME, DTEL) VALUES (40, '영업4부', '051-511-4000');
INSERT INTO DEPT (DEPTNO, DNAME, DTEL) VALUES (50, '영업지원부', '051-511-5000');

// 매출 테이블 데이터 입력
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1001, 2023, 1, 98100);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1002, 2023, 1, 136000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1003, 2023, 1, 80000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1004, 2023, 1, 78000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1005, 2023, 1, NULL);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1001, 2023, 2, 23500);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1002, 2023, 2, 126000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1003, 2023, 2, 18500);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1005, 2023, 2, 19000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1010, 2023, 2, 53000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1001, 2024, 1, 24000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1002, 2024, 1, 109000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1003, 2024, 1, 80000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1004, 2024, 1, NULL);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1007, 2024, 1, 24000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1002, 2024, 2, 160000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1003, 2024, 2, 101000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1004, 2024, 2, 43000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1005, 2024, 2, 24000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1006, 2024, 2, 109000);

-- 실습하기 2-1
select * from emp where name = '김유신';
select * from emp where job = '차장' and depno = 101;
select * from emp where job = '차장' or depno = 101;
select * from emp where name != '김춘추'; // 김춘추 제외 조회
select * from emp where name <> '김춘추'; // 김춘추 제외 조회
select * from emp where job = '사원' and depno = 10;
select * from emp where job = '사원' or job = '대리'; // 사원 또는 대리
select * from emp where job in ('사원', '대리'); // 사원 또는 대리
select * from emp where depno in (101, 102, 103);
select * from emp where name like '김%'; // 김으로 시작되는 모든 문자열
select * from emp where name like '%신'; // 신으로 끝나는 모든 문자열
select * from emp where name like '김__'; // 김??(3자)로 되는 모든 문자열
select * from emp where name like '이_'; // 이?(2자)로 되는 모든 문자열
select * from emp where name like '이__'; // 이??
select * from emp where name like '_순%'; // ?순 + 모든 문자열
select * from dept where dtel like '010-1111%';
select * from emp where depno is null;
select * from emp where depno is not null;
select * from emp where empno >= 1005;
select * from dept where deptno = 10;
select * from dept where dname = '영업지원부';
select * from dept where dtel like '%30%'; // 중간에 30이 들어가는 문자
select * from dept where deptno in (10, 30);
select * from dept where dname like '영업__'; // 영업??로 되는 문자열
select * from sale where price > 50000;
select * from sale where price >= 50000 and price < 100000 and month = 1;
select * from sale where price between 50000 and 100000; // 5만 ~ 10만 사이
select * from sale where price not between 50000 and 100000; // not 5만 ~ 10만
select * from sale where year = 2024;
select * from sale where year = 2024 and month = 2;
select * from sale where month in (1, 2);

-- 실습하기 2-2
select * from sale order by price;
select * from sale order by price asc; // 오름차순
select * from sale order by price desc; // 내림차순
select * from emp order by name desc; // 내림차순
select * from emp order by regdate asc;

select * from sale where price > 50000 order by price desc;
select * from sale 
    where price > 50000 
    order by year, month, price desc; // year, month는 오름차순

// 제한걸기
select * from sale fetch first 3 rows only; // 위에서부터 3개만
select * from sale offset 0 rows fetch next 3 rows only; // 0번째 줄부터 3개까지
select * from sale offset 1 rows fetch next 2 rows only;
select * from sale offset 5 rows fetch next 3 rows only;
select * from sale order by price desc offset 3 rows fetch next 5 rows only;
select * from sale
    where price < 50000
    order by price desc
    fetch first 3 rows only;
    
select * from sale
    where price > 50000
    order by year desc, month, price desc
    fetch first 5 rows only;
    
select distinct depno from emp;
select distinct job, depno from emp;
select empno as 사번, name as 이름, gender as 성별 from emp;
select empno E, name N, gender G from emp;

-- 실습하기 3-1. 다양한 SQL 숫자 함수 실습
select SUM(PRICE) AS 합계 FROM SALE;
select COUNT(*) as 직원수 from emp;
select count(empno) as 직원수 from emp;
select count(depno) as 부서수 from emp;

select ceil(1.2) from dual; // dual은 가상 테이블
select ceil(1.8) from dual;
select floor(1.2) from dual;
select floor(1.8) from dual;
select round(1.2) from dual;
select round(1.8) from dual;

select dbms_random.value from dual;
select ceil(dbms_random.value * 10) from dual;

select sum(price) as 합계 from sale;
select avg(price) as 평균 from sale;
select max(price) as 최대값 from sale;
select min(price) as 최소값 from sale;
select count(*) as 직원수 from emp;
select count(job) as "정직원 수" from emp;

-- 실습하기 3-2. 다양한 SQL 문자 함수 실습

// LENGTH : 문자 길이
select 'Hello ORACLE!', LENGTH('Hello ORACLE!') from dual;

// SUBSTR : 문자 자르기
select
    'Hello ORACLE!',
    substr('HELLO ORACLE!', 1, 3),
    substr('HELLO ORACLE!', 3, 2),
    substr('HELLO ORACLE!', 5) -- 5번째부터 마지막까지
from dual;

// INSTR : 문자위치
select
    instr('HELLO ORACLE!', 'L') as instr_1, -- 앞에서부터 찾음
    instr('HELLO ORACLE!', 'L', -1) as instr_2 -- 뒤에서부터 찾음
from dual;

// REPLACE : 문자 교체
select '010-1234-5678', replace('010-1234-5678', '-', '') FROM dual; -- '-'를 빈문자열로 교체

// LPAD, RPAD : 문자 채우기. (대상문자열, 전체길이, 패딩문자)
select lpad('Oracle', 10, '#') as lpad, rpad('Oracle', 10, '*') as rpad from dual; -- lpad 왼쪽 채우기, rpad 오른쪽 채우기

// CONCAT : 문자 연결
select concat(empno, name) from emp where name = '이순신';
select empno || name from emp where name = '정약용';

// TRIM : 문자 공백 제거
select
    '[ _Oracle_ ]' as before,
    '[' || TRIM(' _Oracle_ ') || ']' as trim
from dual;

-- 실습하기 3-3. SQL 날짜 함수 실습

// SYSDATE : 현재 날짜와 시간 조회
select
    sysdate,
    sysdate -1,
    sysdate + 1 -- 날짜(일)를 각각 -1, 1 조정
from dual;

// ADD_MONTHS(d, n) : 몇 개월 이후 날짜 조회
select
    add_months(sysdate, 1),
    add_months(sysdate, -1)
from dual;

// MONTHS_BETWEEN(d1, d2) : 두 날짜 간 개월 수 계산
select
    months_between(date '2025-07-13', date '2024-07-13') as 개월차
from dual;

// NEXT_DAY(d, '요일') : d 이후의 특정 요일 날짜
select
    next_day(sysdate, '월요일') as 다음_월요일
from dual;

-- 실습하기 3-4. SQL 기타 함수 실습

// TO_CHAR : 날짜 데이터를 문자 데이터로 변환
select
    to_char(sysdate, 'YYYY') as YYYY,
    to_char(sysdate, 'MM') as MM,
    to_char(sysdate, 'DD') as DD,
    to_char(sysdate, 'HH24') as HH24,
    to_char(sysdate, 'MI') as MI,
    to_char(sysdate, 'SS') as SS,
    to_char(sysdate, 'YYYY/MM/DD HH24:MI:SS') as 날짜시간
from dual;

insert into emp values(1011, '안중근', 'M', '부장', 30, to_char(sysdate, 'YYYY/MM/DD'));

// TO_DATE : 문자 데이터를 날짜 데이터로 변환
select
    to_date('20250714', 'YYYY/MM/DD') as 날짜1,
    to_date('250714', 'YY-MM-DD') as 날짜2,
    to_date(sysdate, 'YYYY/MM/DD HH24:MI:SS') as 날짜시간
from dual;

INSERT INTO EMP VALUES (1012, '유관순', 'F', '차장', 20, SYSDATE);
INSERT INTO EMP VALUES (1013, '윤봉길', 'M', '과장', 30,
TO_DATE(SYSDATE, 'YYYY-MM-DD HH24:MI:SS'));

// NVL, NVL2 : NULL 체크 함수
select
    no,
    empno,
    year,
    month,
    nvl(price, 0) -- price에서 null을 0으로
from sale;

select
    empno,
    name,
    gender,
    job,
    nvl2(depno, '정규직', '비정규직') -- depno에 숫자 있으면 정규직, null이면 비정규직
from emp;


-- 실습 4-1. 그룹화 실습
select empno from sale group by empno;
select year from sale group by year;
select empno, year from sale group by empno, year;

select empno, count(*) as 판매건수 from sale group by empno;
select empno, sum(price) as 합계 from sale group by empno;
select empno, avg(price) as 평균 from sale group by empno;

select empno, year, sum(price) as 합계 from sale group by empno, year;

select empno, year, sum(price) as 합계
    from sale
    group by empno, year
    order by year asc, 합계 desc;
    
select empno, year, sum(price) as 합계
    from sale
    where price >= 50000
    group by empno, year
    order by 합계 desc;

select empno, year, sum(price) as 합계
    from sale
    where price >= 50000
    group by empno, year
    having sum(price) >= 200000
    order by 합계 desc; 
    
-- 실습하기 5-1. 2023년도와 2024년도 매출 직원 목록 합치기
select empno, month, price from sale where year = 2023
union
select empno, month, price from sale where year = 2024;

select empno, month, price from sale where year = 2023
union all
select empno, month, price from sale where year = 2024;

select empno, year, sum(price) as 합계
from sale
where year = 2023
group by empno, year
union
select empno, year, sum(price) as 합계
from sale
where year = 2024
group by empno, year
order by year asc, 합계 desc;

-- 실습하기 5-2. 2023년도와 2024년도를 모두 포함한 직원
select empno from sale where year = 2023
intersect
select empno from sale where year = 2024;

-- 실습하기 5-3. 2023년도에만 있고 2024년도에는 없는 직원
select empno from sale where year = 2023
minus
select empno from sale where year = 2024;

-- 실습 6-1. 내부 조인 실습
select *
from emp E
join dept D
on E.DEPNO = D.DEPTNO;

select *
from emp e
join dept d
using (deptno); -- 조인하려는 두 테이블의 공통의 컬럼명만 가능

select * from emp e, dept d where e.depno = d.deptno; -- 좀 더 보편적임

select
        s.no,
        s.empno,
        e.name,
        e.job,
        e.regdate,
        e.depno,
        d.dname
    from sale s
    join emp e on s.empno = e.empno
    join dept d on e.depno = d.deptno
    where price > 100000 and year = 2024
    order by s.price desc;
    
-- 실습 6-2. 외부 조인 실습
select * from sale s
    left join emp e on s.empno = e.empno;

select * from sale s
    right join